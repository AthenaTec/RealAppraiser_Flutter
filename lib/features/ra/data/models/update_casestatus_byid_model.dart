import 'package:real_appraiser/features/ra/domain/entities/update_casestatus_byid_entity.dart';

class UpdateCaseStatusByIdModel extends UpdateCaseStatusByIdEntity {
  const UpdateCaseStatusByIdModel({
    required super.status,
    required super.data,
    required super.msg,
  });

  factory UpdateCaseStatusByIdModel.fromMap(Map<String, dynamic> json) =>
      UpdateCaseStatusByIdModel(
        status: json["status"] ?? '', // Default empty string for status
        data: json["data"] != null ? DataModel.fromMap(json["data"]) : DataModel.empty(),
        msg: json["msg"] ?? '', // Default empty string for msg
      );
}

class DataModel extends DataEntity {
  const DataModel({
    required super.caseId,
    required super.agencyBranchId,
    required super.bankBranchId,
    required super.propertyId,
    required super.customerId,
    required super.feesId,
    required super.workflowId,
    required super.reportId,
    required super.reportTemplateId,
    required super.agencyBranch,
    required super.applicantName,
    required super.applicantContactNo,
    required super.contactPersonName,
    required super.contactPersonNumber,
    required super.bankContactPersonName,
    required super.bankContactPersonNumber,
    required super.bankContactPersonEmail,
    required super.loanType,
    required super.bankReferenceNo,
    required super.applicantEmailId,
    required super.applicantAddress,
    required super.reportType,
    required super.reportFile,
    required super.bankName,
    required super.branchName,
    required super.propertyAddress,
    required super.pincode,
    required super.propertyType,
    required super.professionalFees,
    required super.propertyCity,
    required super.propertyLocality,
    required super.villageName,
    required super.district,
    required super.taluka,
    required super.purpose,
    required super.taxType,
    required super.status,
    required super.assignedTo,
    required super.assignedBy,
    required super.assignedAt,
    required super.amountReceived,
    required super.fieldStaff,
    required super.reportMaker,
    required super.reportMakerDate,
    required super.reportChecker,
    required super.reportFinalizer,
    required super.reportDispatcher,
    required super.telecaller,
    required super.caseSourced,
    required super.sourcedBy,
    required super.gharvalueCity,
    required super.gharvalueLocality,
    required super.gharvaluePropertyName,
    required super.customerFeedbackReceived,
    required super.bankFeedbackReceived,
    required super.caseReferenceNumber,
    required super.footerReferenceNumber,
    required super.appointmentDateTime,
    required super.submittedTo,
    required super.createdOn,
    required super.createdBy,
    required super.modifiedOn,
    required super.modifiedBy,
    required super.signature1,
    required super.signature2,
    required super.acceptanceTime,
    required super.inspectionTime,
    required super.isFromTab,
    required super.shareFolder,
    required super.reportGenerationTime,
    required super.caEmpId,
    required super.typeofOwnership,
    required super.approvedPlanNumber,
    required super.approvedPlanDate,
    required super.approvedPlanApprovingAuthority,
    required super.approvedPlanPreparedBy,
    required super.commencementCertificateNumber,
    required super.commencementCertificateDate,
    required super.commencementApprovingAuthority,
    required super.commencementCertificatePreparedBy,
    required super.approvedRoleId,
    required super.subBranch,
    required super.assignedBranchId,
    required super.approvalNote,
    required super.rejectionNote,
    required super.qcStatus,
    required super.qcNote,
    required super.qcAssignedOn,
    required super.caAgencyBranchId,
    required super.fsAgencyBranchId,
    required super.rmAgencyBranchId,
    required super.rmStatus,
    required super.rmNote,
    required super.rmAssignedOn,
    required super.rmAssignedBy,
    required super.rmqcNote,
    required super.rmqcStatus,
    required super.rmqcAssignedOn,
    required super.approvalId,
    required super.assignedRaBranchId,
    required super.architectEngineerLicenseNo,
    required super.caseAdmin,
    required super.multiCase,
    required super.isCloned,
    required super.isTransferedCase,
    required super.isSignedDocument,
    required super.isSignedDocumentViewed,
    required super.qcCompleteNote,
    required super.qcCompletedDate,
    required super.distanceKm,
    required super.straightLineDistanceKm,
    required super.uniqueIDofthevaluation,
    required super.productSchemeName,
    required super.isFromFinnone,
    required super.isDataSentToNeo,
    required super.typeofOwnershipDd,
    required super.siteVisitDate,
    required super.isSimilar,
    required super.similarPropertyId,
  });


  // Empty constructor for default DataModel
  factory DataModel.empty() => DataModel(
    caseId: 0,
    agencyBranchId: 0,
    bankBranchId: 0,
    propertyId: 0,
    customerId: 0,
    feesId: 0,
    workflowId: 0,
    reportId: 0,
    reportTemplateId: 0,
    agencyBranch: '',
    applicantName: '',
    applicantContactNo: '',
    contactPersonName: '',
    contactPersonNumber: '',
    bankContactPersonName: '',
    bankContactPersonNumber: '',
    bankContactPersonEmail: '',
    loanType: '',
    bankReferenceNo: '',
    applicantEmailId: '',
    applicantAddress: '',
    reportType: 0,
    reportFile: 0,
    bankName: '',
    branchName: '',
    propertyAddress: '',
    pincode: '',
    propertyType: 0,
    professionalFees: '',
    propertyCity: '',
    propertyLocality: '',
    villageName: '',
    district: '',
    taluka: '',
    purpose: '',
    taxType: '',
    status: 0,
    assignedTo: 0,
    assignedBy: 0,
    assignedAt: DateTime.now(),
    amountReceived: 0,
    fieldStaff: 0,
    reportMaker: 0,
    reportMakerDate: '',
    reportChecker: '',
    reportFinalizer: '',
    reportDispatcher: '',
    telecaller: '',
    caseSourced: '',
    sourcedBy: '',
    gharvalueCity: '',
    gharvalueLocality: '',
    gharvaluePropertyName: '',
    customerFeedbackReceived: '',
    bankFeedbackReceived: '',
    caseReferenceNumber: '',
    footerReferenceNumber: '',
    appointmentDateTime: '',
    submittedTo: 0,
    createdOn: '',
    createdBy: 0,
    modifiedOn: "",
    modifiedBy: 0,
    signature1: '',
    signature2: '',
    acceptanceTime: '',
    inspectionTime: '',
    isFromTab: false,
    shareFolder: '',
    reportGenerationTime: '',
    caEmpId: '',
    typeofOwnership: '',
    approvedPlanNumber: '',
    approvedPlanDate: '',
    approvedPlanApprovingAuthority: '',
    approvedPlanPreparedBy: '',
    commencementCertificateNumber: '',
    commencementCertificateDate: '',
    commencementApprovingAuthority: '',
    commencementCertificatePreparedBy: '',
    approvedRoleId: '',
    subBranch: '',
    assignedBranchId: 0,
    approvalNote: '',
    rejectionNote: '',
    qcStatus: '',
    qcNote: '',
    qcAssignedOn: '',
    caAgencyBranchId: 0,
    fsAgencyBranchId: 0,
    rmAgencyBranchId: 0,
    rmStatus: '',
    rmNote: '',
    rmAssignedOn: '',
    rmAssignedBy: '',
    rmqcNote: '',
    rmqcStatus: '',
    rmqcAssignedOn: '',
    approvalId: '',
    assignedRaBranchId: '',
    architectEngineerLicenseNo: '',
    caseAdmin: 0,
    multiCase: '',
    isCloned: false,
    isTransferedCase: false,
    isSignedDocument: false,
    isSignedDocumentViewed: false,
    qcCompleteNote: '',
    qcCompletedDate: '',
    distanceKm: '',
    straightLineDistanceKm: '',
    uniqueIDofthevaluation: '',
    productSchemeName: '',
    isFromFinnone: false,
    isDataSentToNeo: false,
    typeofOwnershipDd: '',
    siteVisitDate: '',
    isSimilar: false,
    similarPropertyId: '',
  );


  factory DataModel.fromMap(Map<String, dynamic> json) => DataModel(
    caseId: json["CaseId"] ?? 0,
    agencyBranchId: json["AgencyBranchId"] ?? 0,
    bankBranchId: json["BankBranchId"] ?? 0,
    propertyId: json["PropertyId"] ?? 0,
    customerId: json["CustomerId"] ?? 0,
    feesId: json["FeesId"] ?? 0,
    workflowId: json["WorkflowId"] ?? 0,
    reportId: json["ReportId"] ?? 0,
    reportTemplateId: json["ReportTemplateId"] ?? 0,
    agencyBranch: json["AgencyBranch"] ?? '',
    applicantName: json["ApplicantName"] ?? '',
    applicantContactNo: json["ApplicantContactNo"] ?? '',
    contactPersonName: json["ContactPersonName"] ?? '',
    contactPersonNumber: json["ContactPersonNumber"] ?? '',
    bankContactPersonName: json["BankContactPersonName"] ?? '',
    bankContactPersonNumber: json["BankContactPersonNumber"] ?? '',
    bankContactPersonEmail: json["BankContactPersonEmail"] ?? '',
    loanType: json["LoanType"] ?? '',
    bankReferenceNo: json["BankReferenceNO"] ?? '',
    applicantEmailId: json["ApplicantEmailId"] ?? '',
    applicantAddress: json["ApplicantAddress"] ?? '',
    reportType: json["ReportType"] ?? '',
    reportFile: json["ReportFile"] ?? '',
    bankName: json["BankName"] ?? '',
    branchName: json["BranchName"] ?? '',
    propertyAddress: json["PropertyAddress"] ?? '',
    pincode: json["Pincode"] ?? '',
    propertyType: json["PropertyType"] ?? '',
    professionalFees: json["ProfessionalFees"] ?? '',
    propertyCity: json["PropertyCity"] ?? '',
    propertyLocality: json["PropertyLocality"] ?? '',
    villageName: json["VillageName"] ?? '',
    district: json["District"] ?? '',
    taluka: json["Taluka"] ?? '',
    purpose: json["Purpose"] ?? '',
    taxType: json["TaxType"] ?? '',
    status: json["Status"] ?? '',
    assignedTo: json["AssignedTo"] ?? '',
    assignedBy: json["AssignedBy"] ?? '',
    assignedAt: json["AssignedAt"] != null ? DateTime.parse(json["AssignedAt"]) : DateTime.now(),
    amountReceived: json["AmountReceived"] ?? 0.0,
    fieldStaff: json["FieldStaff"] ?? '',
    reportMaker: json["ReportMaker"] ?? '',
    reportMakerDate: json["ReportMakerDate"] ?? '',
    reportChecker: json["ReportChecker"] ?? '',
    reportFinalizer: json["ReportFinalizer"] ?? '',
    reportDispatcher: json["ReportDispatcher"] ?? '',
    telecaller: json["Telecaller"] ?? '',
    caseSourced: json["CaseSourced"] ?? '',
    sourcedBy: json["SourcedBy"] ?? '',
    gharvalueCity: json["GharvalueCity"] ?? '',
    gharvalueLocality: json["GharvalueLocality"] ?? '',
    gharvaluePropertyName: json["GharvaluePropertyName"] ?? '',
    customerFeedbackReceived: json["CustomerFeedbackReceived"] ?? '',
    bankFeedbackReceived: json["BankFeedbackReceived"] ?? '',
    caseReferenceNumber: json["CaseReferenceNumber"] ?? '',
    footerReferenceNumber: json["FooterReferenceNumber"] ?? '',
    appointmentDateTime: json["AppointmentDateTime"] ?? '',
    submittedTo: json["SubmittedTo"] ?? '',
    createdOn: json["CreatedOn"] ??"",
    createdBy: json["CreatedBy"] ?? '',
    modifiedOn: json["ModifiedOn"] ??"",
    modifiedBy: json["ModifiedBy"] ?? '',
    signature1: json["Signature1"] ?? '',
    signature2: json["Signature2"] ?? '',
    acceptanceTime: json["AcceptanceTime"] ?? '',
    inspectionTime: json["InspectionTime"] ?? '',
    isFromTab: json["IsFromTab"] ?? false,
    shareFolder: json["ShareFolder"] ?? '',
    reportGenerationTime: json["ReportGenerationTime"] ?? '',
    caEmpId: json["CAEmpId"] ?? '',
    typeofOwnership: json["TypeofOwnership"] ?? '',
    approvedPlanNumber: json["ApprovedPlanNumber"] ?? '',
    approvedPlanDate: json["ApprovedPlanDate"] ?? '',
    approvedPlanApprovingAuthority: json["ApprovedPlanApprovingAuthority"] ?? '',
    approvedPlanPreparedBy: json["ApprovedPlanPreparedBy"] ?? '',
    commencementCertificateNumber: json["CommencementCertificateNumber"] ?? '',
    commencementCertificateDate: json["CommencementCertificateDate"] ?? '',
    commencementApprovingAuthority: json["CommencementApprovingAuthority"] ?? '',
    commencementCertificatePreparedBy: json["CommencementCertificatePreparedBy"] ?? '',
    approvedRoleId: json["ApprovedRoleID"] ?? 0,
    subBranch: json["SubBranch"] ?? '',
    assignedBranchId: json["AssignedBranchId"] ?? 0,
    approvalNote: json["ApprovalNote"] ?? '',
    rejectionNote: json["RejectionNote"] ?? '',
    qcStatus: json["QCStatus"] ?? '',
    qcNote: json["QCNote"] ?? '',
    qcAssignedOn: json["QCAssignedOn"] ?? '',
    caAgencyBranchId: json["CAAgencyBranchId"] ?? 0,
    fsAgencyBranchId: json["FSAgencyBranchId"] ?? 0,
    rmAgencyBranchId: json["RMAgencyBranchId"] ?? 0,
    rmStatus: json["RMStatus"] ?? '',
    rmNote: json["RMNote"] ?? '',
    rmAssignedOn: json["RMAssignedOn"] ?? '',
    rmAssignedBy: json["RMAssignedBy"] ?? '',
    rmqcNote: json["RMQCNote"] ?? '',
    rmqcStatus: json["RMQCStatus"] ?? '',
    rmqcAssignedOn: json["RMQCAssignedOn"] ?? '',
    approvalId: json["ApprovalId"] ?? 0,
    assignedRaBranchId: json["AssignedRABranchId"] ?? 0,
    architectEngineerLicenseNo: json["ArchitectEngineerLicenseNo"] ?? '',
    caseAdmin: json["CaseAdmin"] ?? '',
    multiCase: json["MultiCase"] ?? '',
    isCloned: json["IsCloned"] ?? false,
    isTransferedCase: json["IsTransferedCase"] ?? false,
    isSignedDocument: json["IsSignedDocument"] ?? false,
    isSignedDocumentViewed: json["IsSignedDocumentViewed"] ?? false,
    qcCompleteNote: json["QCCompleteNote"] ?? '',
    qcCompletedDate: json["QCCompletedDate"] ?? '',
    distanceKm: json["DistanceKM"] ?? 0.0,
    straightLineDistanceKm: json["StraightLineDistanceKM"] ?? 0.0,
    uniqueIDofthevaluation: json["UniqueIDofthevaluation"] ?? '',
    productSchemeName: json["ProductSchemeName"] ?? '',
    isFromFinnone: json["IsFromFinnone"] ?? false,
    isDataSentToNeo: json["IsDataSentToNeo"] ?? false,
    typeofOwnershipDd: json["TypeofOwnershipDd"] ?? '',
    siteVisitDate: json["SiteVisitDate"] ?? '',
    isSimilar: json["IsSimilar"] ?? false,
    similarPropertyId: json["SimilarPropertyId"] ?? '',
  );
}
